---
- name: Restart Nodes
  hosts: nodes
  become: true
  gather_facts: true

  tasks:

    - name: block cline
      block:

        - name: Reset Kubernetes Cluster
          command: kubeadm reset -f
          ignore_errors:  yes
    
        - name: Remove directories and files
          command: rm -rf /etc/cni /etc/kubernetes /var/lib/dockershim /var/lib/etcd /var/lib/kubelet /var/run/kubernetes ~/.kube/*
        
        - name: Restart Docker
          systemd:
            name: docker
            state: restarted
            
        - name: Restart kubelet
          service:
            name: kubelet   
            state: restarted          
    
        - name: Restart Containerd service
          service:
            name: containerd   
            state: restarted
                                
        - name: delet .kube
      
          shell: "{{ item }}"
          with_items:
            - rm -rf /root/.kube


    - name: block refresh
      block:

        - name: Initialize Kubernetes Cluster
          shell: |
              kubeadm init --apiserver-advertise-address=192.168.0.134 --pod-network-cidr=10.244.0.0/16
          ignore_errors:  yes
          register: kubeadm_join
          
        - name: Following as a Regular User
          shell: |
               mkdir -p /root/.kube
               cp -i /etc/kubernetes/admin.conf /root/.kube/config
               chown root:root /root/.kube/config
               sleep 6
               export KUBECONFIG=/etc/kubernetes/admin.conf
               
        - name: Get Nodes
          shell: |
               kubectl get nodes  
          register: get_nodes    
          ignore_errors:  yes 
        
        - name: Kubectl Apply KubeFlannel
          shell: |
               kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml             
          ignore_errors:  yes

        - name: Display NTP synchronization status
          debug:
            var: kubeadm_join.stdout_lines
            var: get_nodes.stdout_lines
      when: ansible_facts.hostname | lower == 'master'      

